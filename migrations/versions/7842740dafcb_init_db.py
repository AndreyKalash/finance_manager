"""init_db

Revision ID: 7842740dafcb
Revises: 
Create Date: 2025-05-02 18:17:35.610662

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision: str = "7842740dafcb"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column(
            "id", fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False
        ),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_username", "user", ["username"], unique=True)
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "category",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("color", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_category_color_user",
        "category",
        ["color", "user_id"],
        unique=False,
    )
    op.create_index(
        "idx_category_name_user", "category", ["name", "user_id"], unique=True
    )
    op.create_table(
        "tag",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("color", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_color_user", "tag", ["color", "user_id"], unique=False
    )
    op.create_index("idx_name_user", "tag", ["name", "user_id"], unique=True)
    op.create_table(
        "unit",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("default_value", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_unit_default_value_user",
        "unit",
        ["default_value", "user_id"],
        unique=False,
    )
    op.create_index(
        "idx_unit_name_user", "unit", ["name", "user_id"], unique=True
    )
    op.create_table(
        "record",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("record_date", sa.Date(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("unit_quantity", sa.Float(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("category_id", sa.UUID(), nullable=False),
        sa.Column("unit_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.CheckConstraint("price >= 0", name="check_product_price"),
        sa.CheckConstraint("quantity > 0", name="check_product_quantity"),
        sa.CheckConstraint("unit_quantity > 0", name="check_unit_quantity"),
        sa.ForeignKeyConstraint(
            ["category_id"], ["category.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["unit_id"], ["unit.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_product_name", "record", ["name"], unique=False)
    op.create_index("idx_record_date", "record", ["record_date"], unique=False)
    op.create_table(
        "record_tag",
        sa.Column("record_id", sa.UUID(), nullable=False),
        sa.Column("tag_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["record_id"], ["record.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tag_id"], ["tag.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("record_id", "tag_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("record_tag")
    op.drop_index("idx_record_date", table_name="record")
    op.drop_index("idx_product_name", table_name="record")
    op.drop_table("record")
    op.drop_index("idx_unit_name_user", table_name="unit")
    op.drop_index("idx_unit_default_value_user", table_name="unit")
    op.drop_table("unit")
    op.drop_index("idx_name_user", table_name="tag")
    op.drop_index("idx_color_user", table_name="tag")
    op.drop_table("tag")
    op.drop_index("idx_category_name_user", table_name="category")
    op.drop_index("idx_category_color_user", table_name="category")
    op.drop_table("category")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_index("idx_username", table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###

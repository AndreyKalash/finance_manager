"""record_tag

Revision ID: 8197163581a2
Revises: ecdb80081278
Create Date: 2025-05-12 23:55:06.526597

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8197163581a2"
down_revision: Union[str, None] = "ecdb80081278"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        "uq_record_tag", "record_tag", ["record_id", "tag_id"], unique=True
    )
    op.drop_constraint(
        "record_tag_tag_id_fkey", "record_tag", type_="foreignkey"
    )
    op.drop_constraint(
        "record_tag_record_id_fkey", "record_tag", type_="foreignkey"
    )
    op.create_foreign_key(None, "record_tag", "record", ["record_id"], ["id"])
    op.create_foreign_key(None, "record_tag", "tag", ["tag_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "record_tag", type_="foreignkey")
    op.drop_constraint(None, "record_tag", type_="foreignkey")
    op.create_foreign_key(
        "record_tag_record_id_fkey",
        "record_tag",
        "record",
        ["record_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "record_tag_tag_id_fkey",
        "record_tag",
        "tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_index("uq_record_tag", table_name="record_tag")
    # ### end Alembic commands ###
